class Alphabet:
    def __new__(cls, symbols: bytes) -> Alphabet: ...
    def __repr__(self) -> str: ...
    def __bytes__(self) -> bytes: ...
    def __len__(self) -> int: ...
    def __and__(self, other: Alphabet) -> Alphabet: ...
    def __or__(self, other: Alphabet) -> Alphabet: ...
    @property
    def symbols(self) -> bytes: ...
    def is_word(self, text: bytes) -> bool: ...


class RankTransform:
    def __new__(cls, alphabet: Alphabet) -> RankTransform: ...
    def __repr__(self) -> str: ...
    @property
    def ranks(self) -> dict[str, int]: ...
    def get(self, chr: bytes) -> int: ...
    def transform(self, text: bytes) -> list[int]: ...
    def q_grams(self, q: int, text: bytes) -> list[int]: ...
    def get_width(self) -> int: ...
